#!/usr/bin/env bash
#  -*- coding:utf-8 mode:bash -*-
# This file is generated by ansible.
# last update: {{ '%Y-%m-%d %H:%M:%S %Z' | strftime(ansible_date_time.epoch) }}
set -euo pipefail

# 目的:
#   firewalld の rpfilter 相当 drop より先に、該当トラフィックを accept させ評価を終了
# 方針:
#   - prerouting(全family) で返答トラフィック救済
#   - output(ip6) で CoreDNS の readiness/liveness(8080/8181) に対する SYN を先回り許可
#     (oif: cilium_host / 物理NIC(例: ens160))

has_link() {
  ip link show dev "$1" >/dev/null 2>&1
}

ensure_pre_family() {
  local fam="$1"            # ip | ip6 | inet
  local tbl="rpfix"
  local chn="pre"
  local prio="- 20"         # nft 表記: priority filter - 20

  nft list table "${fam}" "${tbl}" >/dev/null 2>&1 || nft add table "${fam}" "${tbl}"
  if ! nft list chain "${fam}" "${tbl}" "${chn}" >/dev/null 2>&1; then
    nft add chain "${fam}" "${tbl}" "${chn}" \
      "{ type filter hook prerouting priority filter ${prio}; policy accept; }"
  fi
  nft flush chain "${fam}" "${tbl}" "${chn}"

  # 1) Established/Related を包括許可
  nft add rule "${fam}" "${tbl}" "${chn}" ct state established,related accept

  # 2) TCP SYN/ACK（返答開始）を包括許可
  #    ( ) は不要。nft のビットマスク構文で表現する。
  nft add rule "${fam}" "${tbl}" "${chn}" tcp flags syn,ack / syn,ack accept

  # 3) ICMP/ICMPv6 基本制御を許可
  if [[ "${fam}" == "ip" ]]; then
    nft add rule ip  "${tbl}" "${chn}" icmp type { echo-reply, destination-unreachable, time-exceeded, parameter-problem } accept
  elif [[ "${fam}" == "ip6" ]]; then
    nft add rule ip6 "${tbl}" "${chn}" icmpv6 type { nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, echo-reply, packet-too-big, time-exceeded, parameter-problem } accept
  else
    # inet は v4/v6 両方を同一チェーンで面倒見る
    nft add rule inet "${tbl}" "${chn}" icmp  type { echo-reply, destination-unreachable, time-exceeded, parameter-problem } accept
    nft add rule inet "${tbl}" "${chn}" icmpv6 type { nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, echo-reply, packet-too-big, time-exceeded, parameter-problem } accept
  fi
}

ensure_out_ip6() {
  local fam="ip6"
  local tbl="rpfix"
  local chn="out"
  local prio="- 20"    # nft 表記

  nft list table "${fam}" "${tbl}" >/dev/null 2>&1 || nft add table "${fam}" "${tbl}"
  if ! nft list chain "${fam}" "${tbl}" "${chn}" >/dev/null 2>&1; then
    nft add chain "${fam}" "${tbl}" "${chn}" \
      "{ type filter hook output priority filter ${prio}; policy accept; }"
  fi
  nft flush chain "${fam}" "${tbl}" "${chn}"

  # CoreDNS の 8080/8181 へ出ていく SYN を先回り許可
  # cilium_host があれば Pod 直行、ens160(例) はノード間転送経路で保険
  if has_link cilium_host; then
    nft add rule ip6 "${tbl}" "${chn}" oifname "cilium_host" tcp dport { 8080, 8181 } ct state new,established accept
  fi

  # 物理 NIC 名は必要に応じて上書き可能にしておく（デフォルト ens160）
  PHY_IF="{{ hostvars[inventory_hostname].k8s_phy_if | default('ens160') }}"
  if has_link "${PHY_IF}"; then
    nft add rule ip6 "${tbl}" "${chn}" oifname "${PHY_IF}" tcp dport { 8080, 8181 } ct state new,established accept
  fi
}

# 実行
ensure_pre_family inet
ensure_pre_family ip
ensure_pre_family ip6
ensure_out_ip6
exit 0
