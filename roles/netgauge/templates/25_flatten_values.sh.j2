#!/usr/bin/env bash
#
#  -*- coding:utf-8 mode:bash -*-
# This file is generated by ansible.
{# 日付の取得 #}
# last update: {{ '%Y-%m-%d %H:%M:%S %Z' | strftime(ansible_date_time.epoch) }}

#
# 測定値収集
#

if [ $# -ne 1 ]; then
    if [ "x${RUN_DIR}" = "x" ]; then
	OUT_BASE="${OUT_BASE:-./runs}"
	TS="$(date +%Y%m%d-%H%M%S)"
	RUN_DIR="${OUT_BASE}/${MODE}-${TS}"
    fi
else
    RUN_DIR="$1"
fi

if [ -d "${RUN_DIR}" ]; then
    # ==== 解析用：プレーンCSV抽出（コメント/#行除去, 数値列のみ抽出） ====
    # Netgaugeのnoise出力はバージョンで体裁が異なるので, まず数値行だけ抜く汎用器
    awk '($1 ~ /^[-0-9.]+$/) {print $2}' "${RUN_DIR}"/rank*/rank*.out > "${RUN_DIR}/_values_all.txt"

    # rankごとにもバラして保存
    for f in `echo "${RUN_DIR}/rank*/rank*.out"`; do
	base="$(basename "${f}" .out)"
	echo "Process ${f}"
	awk '($1 ~ /^[-0-9.]+$/) {print $2}' "${f}" > "${RUN_DIR}/${base}.val"
    done

    echo "[OK] Flattened values -> ${RUN_DIR}/_values_all.txt and rankXXXX.val"
fi

echo "次は ./30_plot_all.sh ${RUN_DIR} を実行してください。"
