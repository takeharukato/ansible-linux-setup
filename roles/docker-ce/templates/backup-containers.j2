#!/bin/sh
# -*-mode: bash; coding:utf-8-*-
#  コンテナボリュームバックアップスクリプト
#  Copyright 2020 Takeharu KATO All Rights Reserved.
#
# This file is generated by ansible.
{# 日付の取得 #}
# last update: {{ '%Y-%m-%d %H:%M:%S %Z' | strftime(ansible_date_time.epoch) }}

#
# /usr/local/bin/backup-containers
#
# コンテナをリストアップし, コンテナ内のボリュームをtar.xzでバックアップする
#
# 使用法:
#   /usr/local/bin/backup-containers
#   (cron.daily等で実行することを想定)
# バックアップされるファイル名: コンテナ名-世代数.tar.xz
#   世代数は, 年間通算日数を最大保存世代数({{ docker_ce_backup_rotation }})で割った余りとなる。
#
#
# バックアップ先:
#    {{ docker_ce_backup_output_dir }}
#   (NFSマウントポイント{{ docker_ce_backup_mount_point }}に
#    {{ docker_ce_backup_nfs_dir }}をマウントして使用することを想定)
#
# 実装について:
# https://github.com/boombatower/docker-backup
# を使用している
# リストアする場合は, 対象のコンテナをstopして,
#  docker run --rm \
#  --volumes-from コンテナ名 \
#  -v $(pwd):/backup \
#  boombatower/docker-backup restore "バックアップしたtar.xzファイル名"
# を実行する
# 例: ldap-serverコンテナにカレントディレクトリのldap-server-1.tar.xzを展開する場合は,
#
#  docker run --rm \
#  --volumes-from ldap-server \
#  -v $(pwd):/backup \
#  boombatower/docker-backup restore ldap-server-1.tar.xz
#
# を実行する
#
# playbook作成時の
#
# 参照
#
image="{{docker_ce_backup_container_image}}"
# 最大保存世代数
rotate="{{ docker_ce_backup_rotation }}"

# netcatコマンド
NC="{{ nc_command }}"

# NASのアドレス
nfs_server="{{ docker_ce_backup_nfs_server }}"

# NASのnfsディレクトリ
nfs_dir="${nfs_server}:{{ docker_ce_backup_nfs_dir }}"

#マウントポイント
mnt_point="{{ docker_ce_backup_mount_point }}"

# バックアップ先トップディレクトリ
backup_dir="{{ docker_ce_backup_output_dir }}"

main(){
    local day
    local gen
    local container_name

    #年間通算日数を算出
    day=`date +'%j'`

    #世代数算出
    gen=`expr ${day} % ${rotate}`

    # 接続を確認
    ${NC} -v -w 5 ${nfs_server} nfs

    if [ $? -ne 0 ]; then
	    echo "${nfs_server} is not available"
	    exit 1
    fi

    # 世代数を表示
    echo "generation: ${gen}"
    echo "NFS directory: ${nfs_dir}"

    # NASをマウント
    echo "Mount ${nfs_dir} on ${mnt_point}"
    sudo mount -t nfs "${nfs_dir}" "${mnt_point}"

    # 1) 名前付きコンテナをリストアップする
{% raw %}
    docker ps --format "{{.Names}}"|while read container_name
{% endraw %}
    do
	echo "${container_name}"

	# 2) バックアップ先ディレクトリを作成
	sudo mkdir -p "${backup_dir}/${container_name}"

	# 3) boombatower/docker-backupを用いてコンテナ内のボリュームを
	# コンテナ名-世代数.tar.xz
	docker run --rm \
	       --volumes-from ${container_name} \
	       -v "${backup_dir}/${container_name}:/backup" \
	       "${image}" backup "${container_name}-${gen}.tar.xz"
    done

    # 4) 削除可能にする
    sudo chmod -R o+rwX "${backup_dir}"

    # NASをアンマウント
    echo "Unmount ${mnt_point}"
    sudo umount "${mnt_point}"
}

main $@
