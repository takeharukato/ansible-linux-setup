#!/usr/bin/env bash
#  -*- coding:utf-8 mode:bash -*-
# This file is generated by ansible.
{# 日付の取得 #}
# last update: {{ '%Y-%m-%d %H:%M:%S %Z' | strftime(ansible_date_time.epoch) }}

#
# Crontab用Redmine デイリーバックアップスクリプト
# crontab -eコマンドで以下のcrontabエントリを作成する。
#以下の設定では, 毎日午前3時に`/data/redmine/backup`にバックアップファイルを生成する。
#
#```:crontab
#0 3 * * * /data/redmine/scripts/daily-backup-redmine.sh
#```
#

# NFSサーバマウント時のオプション
NFS_SERVER_OPT="{{redmine_backup_nfs_server}}:{{redmine_backup_nfs_dir}}"
# マウント先ディレクトリ
NFS_MOUNT_POINT="{{redmine_backup_mount_point}}"
# バックアップファイル配置先
REDMINE_BACKUP_DIR="{{redmine_backup_output_dir}}"
# Redmineバックアップスクリプト
REDMINE_BACKUP_SCRIPT="{{redmine_scripts_dir|default('/data/redmine/scripts', true)}}/backup-redmine-data.sh"
# ローカルバックアップディレクトリ
LOCAL_BACKUP_DIR="{{redmine_backup_dir|default('/data/redmine/backup', true)}}"

# Redmineバックアップ実行
# 引数: なし
# 戻り値: なし
# 説明: Redmineバックアップスクリプトを実行する。
#   Redmineバックアップスクリプトが存在し, 実行可能な場合に実行する。
#   Redmineバックアップスクリプトは, RedmineデータベースとRedmineファイルを
#   変数LOCAL_BACKUP_DIRで指定されたバックアップディレクトリにバックアップする。
#
do_backup() {

    if [ -e "${REDMINE_BACKUP_SCRIPT}" -a -x "${REDMINE_BACKUP_SCRIPT}" ]; then

        # バックアップ実行
        /bin/bash "${REDMINE_BACKUP_SCRIPT}"
    fi
}

copy_backup() {
    local output_files_path
    local output_dbdata_path
    local day
    local rotation
    local gen

    #年間通算日数を算出
    day=`date +'%j'`

    #バックアップローテーション数
    rotation={{redmine_backup_rotation|default('7')}}

    #バックアップ世代番号を算出
    gen=`expr ${day} % ${rotation}`

    sudo mount -t nfs "${NFS_SERVER_OPT}" "${NFS_MOUNT_POINT}"

    if [ $? -eq 0 ]; then

        mountpoint "${NFS_MOUNT_POINT}"
        if [ $? -eq 0 ]; then

            #マウント成功
            echo "NFS mount OK: ${NFS_MOUNT_POINT}"

            # ディレクトリ作成
            sudo mkdir -p "${REDMINE_BACKUP_DIR}"
            if [ -d "${REDMINE_BACKUP_DIR}" ]; then

                sudo chmod 777 "${REDMINE_BACKUP_DIR}"

                output_files_path="${REDMINE_BACKUP_DIR}/{{redmine_files_base_name}}-${gen}.tgz"
                output_dbdata_path="${REDMINE_BACKUP_DIR}/{{redmine_dbdata_backup_name}}-${gen}.gz"

                if [ -d "${LOCAL_BACKUP_DIR}" -a -f "${LOCAL_BACKUP_DIR}/{{redmine_dbdata_backup_gzip}}" ]; then

                    # データベースファイルをコピー
                    sudo cp "${LOCAL_BACKUP_DIR}/{{redmine_dbdata_backup_gzip}}" "${output_dbdata_path}"
                fi

                if [ -d "${LOCAL_BACKUP_DIR}" -a -f "${LOCAL_BACKUP_DIR}/{{redmine_files_backup_name}}" ]; then

                    # ファイルデータをコピー
                    sudo cp "${LOCAL_BACKUP_DIR}/{{redmine_files_backup_name}}" "${output_files_path}"
                fi


            fi
        fi

        sudo umount "${NFS_MOUNT_POINT}"
    fi
}

main() {

    do_backup
    copy_backup
}

main $@