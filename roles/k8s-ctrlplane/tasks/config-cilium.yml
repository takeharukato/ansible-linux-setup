#  -*- coding:utf-8 mode:yaml -*-
#  Ansible playbook
#  Copyright 2020 Takeharu KATO All Rights Reserved.
#
#  設定関連タスク
#

# kube-apiが使えるようになるのを待ち合わせる
- name: wait for kube-api-server
  local_action: wait_for host={{ k8s_ctrlplane_endpoint }} port=6443 state=started

- name: remove kube-proxy
  shell: |
    kubectl delete daemonsets.apps -n kube-system kube-proxy
  become: true

- name: remove kube-proxy configmap
  shell: |
    kubectl delete configmaps -n kube-system kube-proxy
  become: true

- name: delete kube-proxy iptables
  shell: |
    iptables-save | grep -v KUBE | iptables-restore
  become: true

- name: Setup values file
  template:
    src: cilium-install.yml.j2
    dest: "{{ k8s_cilium_config_dir }}/cilium-install.yml"
    owner: root
    group: root
    mode: 0644
    backup: no

#
# Ciliumのインストール
# 以下で実行した場合の helm get values -n kube-system cilium の結果は以下の通り:
#
#USER-SUPPLIED VALUES:
#autoDirectNodeRoutes: true
#bpf:
#  masquerade: true
#clustermesh:
#  enabled: false
#cni:
#  exclusive: false
#enable-ipv6-masquerade: false
#hubble:
#  relay:
#    enabled: false
#  ui:
#    enabled: false
#image:
#  tag: v1.16.0
#  useDigest: false
#ipMasqAgent:
#  enabled: false
#ipam:
#  mode: kubernetes
#ipv4NativeRoutingCIDR: 10.244.0.0/16
#ipv6:
#  enabled: true
# ipv6NativeRoutingCIDR: fdb6:6e92:3cfb::/56
# k8sServiceHost: 192.168.20.41
# k8sServicePort: 6443# USER-SUPPLIED VALUES:
#
# 上記設定をコマンドラインで記載すると以下のようになる。
# 各設定の意味を以下にしめす。
#
#helm install cilium cilium/cilium
#  Cilium の Helm チャートを新規インストールする
#  （同名リリースが既にあると失敗するため, 反復適用時(kubeadm resetしない場合)は, helm upgrade --installとする）。
#
# --version {{ k8s_cilium_version }}
#   バージョンを明示する
#
# --set hubble.relay.enabled=false
#   hubble relayを無効にする
#
# --set hubble.ui.enabled=false
#   HubbleのGUIを導入しない
#
# --set clustermesh.enabled=false
#   Cilium Cluster Meshコンポーネントを導入しない
#   デフォルトでも導入されないが, 明示するようにしている。
#
#--namespace kube-system
#  Cilium のリソース ( DaemonSet/Deployment など ) を kube-system に作成。
#  cpusetの設定で, アプリケーションPodと分離することを想定して設定。
#
#--set ipam.mode=kubernetes
#  IP アドレス管理を Kubernetes IPAM に設定。各ノードの spec.podCIDR を使って Pod に IP を割り当てる。
#
#--set k8sServiceHost={{ k8s_ctrlplane_endpoint }}
#  Cilium エージェントが Kubernetes API サーバへ接続する宛先ホスト/IP を明示。
#   ( kube-proxy 置換時に必要な設定。コントロールプレーンの IP を指定 )
#
#--set k8sServicePort=6443
#  上記 API サーバのポート。
#
#--set kubeProxyReplacement=true
#  kube-proxy を完全に eBPF で置換。Service/負荷分散/NAT を Cilium が担当する。
#
#--set bpf.masquerade=true
#  Pod->外部 への NAT を eBPF で実施 ( = enable-ipv4-masquerade=true ) 。
#
#--set ipMasqAgent.enabled=false
#  ip-masq-agent を無効化。上の eBPF マスカレードと役割が重複するためオフに設定。
#
#--set routingMode=native
#  トンネルを使わず L3 直行 ( native routing )  で動作。ノード間に L3 到達性と適切なルート ( 直行ルート ) が必要。
#
#--set autoDirectNodeRoutes=true
#  Cilium が 各ノードの PodCIDR への直行ルートを自動追加する。
#   ( NIC 自動検出に失敗する環境では --set devices="{ens160}" などの明示指定やnetplanなどのOS側の設定が必要 )
#
# --set ipv4NativeRoutingCIDR={{ k8s_pod_ipv4_network_cidr }}
#   ネイティブ直行の対象 IPv4 CIDR ( クラスタの Pod ネットワーク全体 )  を指定。
#   例：10.244.0.0/16。routingMode=native では 必須。
#
# --set ipv6.enabled=true
#   IPv6を有効にする
#
# --set enable-ipv6-masquerade=false
#   IPv6マスカレードを無効にする
#
# --set ipv6NativeRoutingCIDR={{ k8s_pod_ipv6_network_cidr }}
#   ネイティブ直行の対象 IPv6 CIDR ( クラスタの Pod ネットワーク全体 )  を指定。
#   例：fdb6:6e92:3cfb::/64。routingMode=native では 必須。
#
# --set cni.exclusive=false
#   一つのPodに複数のCNIを生成する
#   Cilium中で実施する他のCNIの設定値の削除処理を抑止する
#
- name: Install Cilium
  shell: |
    helm install cilium cilium/cilium \
    --namespace kube-system \
    --version {{ k8s_cilium_helm_chart_version }} \
    -f {{ k8s_cilium_config_dir }}/cilium-install.yml

# マシンをリブートする
- name: Reboot host gracefully
  reboot:
    reboot_timeout: 600
    msg: "Reboot triggered by role: common"
    pre_reboot_delay: 2

- name: Wait for connection after reboot
  wait_for_connection:
    timeout: 300
